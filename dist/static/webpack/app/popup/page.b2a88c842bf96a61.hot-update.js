"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/popup/page",{

/***/ "(app-pages-browser)/./lib/avatar-utils.ts":
/*!*****************************!*\
  !*** ./lib/avatar-utils.ts ***!
  \*****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AVAILABLE_AVATARS: function() { return /* binding */ AVAILABLE_AVATARS; },\n/* harmony export */   enhanceDialogueWithAvatars: function() { return /* binding */ enhanceDialogueWithAvatars; },\n/* harmony export */   getAvatarByName: function() { return /* binding */ getAvatarByName; },\n/* harmony export */   getDialogueAvatars: function() { return /* binding */ getDialogueAvatars; }\n/* harmony export */ });\n// Avatar utility for dialogue sections\n// Available avatars for dialogue sections\nconst AVAILABLE_AVATARS = [\n    {\n        name: \"Bethy\",\n        image: \"/avatars/Bethy.png\",\n        role: \"student\"\n    },\n    {\n        name: \"Fausta\",\n        image: \"/avatars/Fausta.png\",\n        role: \"student\"\n    },\n    {\n        name: \"Nailah\",\n        image: \"/avatars/Nailah.png\",\n        role: \"student\"\n    },\n    {\n        name: \"Peggy\",\n        image: \"/avatars/Peggy.png\",\n        role: \"student\"\n    },\n    {\n        name: \"Sam\",\n        image: \"/avatars/Sam.png\",\n        role: \"student\"\n    },\n    {\n        name: \"Asher\",\n        image: \"/avatars/Asher.png\",\n        role: \"tutor\"\n    },\n    {\n        name: \"Edmond\",\n        image: \"/avatars/Edmond.png\",\n        role: \"tutor\"\n    },\n    {\n        name: \"Etienne\",\n        image: \"/avatars/Etienne.png\",\n        role: \"tutor\"\n    },\n    {\n        name: \"John\",\n        image: \"/avatars/John.png\",\n        role: \"tutor\"\n    },\n    {\n        name: \"Jose\",\n        image: \"/avatars/Jose.png\",\n        role: \"tutor\"\n    }\n];\n// Get persistent avatars for dialogue (one student, one tutor)\n// Uses lesson ID and section name to ensure same avatars persist across refreshes\n// Different sections get different avatars but remain consistent for that section\nfunction getDialogueAvatars(lessonId, sectionName) {\n    const students = AVAILABLE_AVATARS.filter((avatar)=>avatar.role === \"student\");\n    const tutors = AVAILABLE_AVATARS.filter((avatar)=>avatar.role === \"tutor\");\n    // Create a seed from lesson ID and section name\n    const seed = \"\".concat(lessonId || \"default-lesson\", \"-\").concat(sectionName || \"default-section\");\n    // Simple hash function to convert string to number\n    const hashCode = (str)=>{\n        let hash = 0;\n        for(let i = 0; i < str.length; i++){\n            const char = str.charCodeAt(i);\n            hash = (hash << 5) - hash + char;\n            hash = hash & hash // Convert to 32-bit integer\n            ;\n        }\n        return Math.abs(hash);\n    };\n    const hash = hashCode(seed);\n    // Debug logging to see what's happening\n    if (true) {\n        console.log(\"\\uD83C\\uDFAD Avatar Selection Debug:\", {\n            lessonId,\n            sectionName,\n            seed,\n            hash,\n            studentsCount: students.length,\n            tutorsCount: tutors.length\n        });\n    }\n    // Use hash to select consistent avatars with better distribution\n    const studentIndex = hash % students.length;\n    // Use a different offset calculation to ensure different selections\n    const tutorIndex = Math.floor(hash / students.length) % tutors.length;\n    const selectedAvatars = {\n        student: students[studentIndex],\n        tutor: tutors[tutorIndex]\n    };\n    // Debug logging for selected avatars\n    if (true) {\n        console.log(\"\\uD83C\\uDFAD Selected Avatars for \".concat(sectionName, \":\"), {\n            studentIndex,\n            tutorIndex,\n            student: selectedAvatars.student.name,\n            tutor: selectedAvatars.tutor.name\n        });\n    }\n    return selectedAvatars;\n}\n// Get avatar by name\nfunction getAvatarByName(name) {\n    return AVAILABLE_AVATARS.find((avatar)=>avatar.name.toLowerCase() === name.toLowerCase());\n}\n// Replace generic character names with avatar names in dialogue\nfunction enhanceDialogueWithAvatars(dialogue, lessonId, sectionName) {\n    const avatars = getDialogueAvatars(lessonId, sectionName);\n    return dialogue.map((item)=>{\n        let avatar;\n        let character = item.character;\n        // Replace generic names with avatar names\n        if (item.character.toLowerCase().includes(\"student\") || item.character.toLowerCase().includes(\"learner\")) {\n            character = avatars.student.name;\n            avatar = avatars.student;\n        } else if (item.character.toLowerCase().includes(\"tutor\") || item.character.toLowerCase().includes(\"teacher\") || item.character.toLowerCase().includes(\"instructor\")) {\n            character = avatars.tutor.name;\n            avatar = avatars.tutor;\n        }\n        return {\n            ...item,\n            character,\n            avatar\n        };\n    });\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/avatar-utils.ts\n"));

/***/ })

});