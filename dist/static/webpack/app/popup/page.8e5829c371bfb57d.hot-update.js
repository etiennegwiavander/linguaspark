"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/popup/page",{

/***/ "(app-pages-browser)/./lib/avatar-utils.ts":
/*!*****************************!*\
  !*** ./lib/avatar-utils.ts ***!
  \*****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AVAILABLE_AVATARS: function() { return /* binding */ AVAILABLE_AVATARS; },\n/* harmony export */   enhanceDialogueWithAvatars: function() { return /* binding */ enhanceDialogueWithAvatars; },\n/* harmony export */   getAvatarByName: function() { return /* binding */ getAvatarByName; },\n/* harmony export */   getDialogueAvatars: function() { return /* binding */ getDialogueAvatars; }\n/* harmony export */ });\n// Avatar utility for dialogue sections\n// Available avatars for dialogue sections\nconst AVAILABLE_AVATARS = [\n    {\n        name: \"Bethy\",\n        image: \"/avatars/Bethy.png\",\n        role: \"student\"\n    },\n    {\n        name: \"Fausta\",\n        image: \"/avatars/Fausta.png\",\n        role: \"student\"\n    },\n    {\n        name: \"Nailah\",\n        image: \"/avatars/Nailah.png\",\n        role: \"student\"\n    },\n    {\n        name: \"Peggy\",\n        image: \"/avatars/Peggy.png\",\n        role: \"student\"\n    },\n    {\n        name: \"Sam\",\n        image: \"/avatars/Sam.png\",\n        role: \"student\"\n    },\n    {\n        name: \"Asher\",\n        image: \"/avatars/Asher.png\",\n        role: \"tutor\"\n    },\n    {\n        name: \"Edmond\",\n        image: \"/avatars/Edmond.png\",\n        role: \"tutor\"\n    },\n    {\n        name: \"Etienne\",\n        image: \"/avatars/Etienne.png\",\n        role: \"tutor\"\n    },\n    {\n        name: \"John\",\n        image: \"/avatars/John.png\",\n        role: \"tutor\"\n    },\n    {\n        name: \"Jose\",\n        image: \"/avatars/Jose.png\",\n        role: \"tutor\"\n    }\n];\n// Get persistent avatars for dialogue (one student, one tutor)\n// Uses lesson ID or content hash to ensure same avatars persist across refreshes\nfunction getDialogueAvatars(lessonId) {\n    const students = AVAILABLE_AVATARS.filter((avatar)=>avatar.role === \"student\");\n    const tutors = AVAILABLE_AVATARS.filter((avatar)=>avatar.role === \"tutor\");\n    // Create a seed from lesson ID or use a default\n    const seed = lessonId || \"default-lesson\";\n    // Simple hash function to convert string to number\n    const hashCode = (str)=>{\n        let hash = 0;\n        for(let i = 0; i < str.length; i++){\n            const char = str.charCodeAt(i);\n            hash = (hash << 5) - hash + char;\n            hash = hash & hash // Convert to 32-bit integer\n            ;\n        }\n        return Math.abs(hash);\n    };\n    const hash = hashCode(seed);\n    // Use hash to select consistent avatars\n    const studentIndex = hash % students.length;\n    const tutorIndex = (hash + 1) % tutors.length // Offset to avoid same selection\n    ;\n    return {\n        student: students[studentIndex],\n        tutor: tutors[tutorIndex]\n    };\n}\n// Get avatar by name\nfunction getAvatarByName(name) {\n    return AVAILABLE_AVATARS.find((avatar)=>avatar.name.toLowerCase() === name.toLowerCase());\n}\n// Replace generic character names with avatar names in dialogue\nfunction enhanceDialogueWithAvatars(dialogue, lessonId) {\n    const avatars = getDialogueAvatars(lessonId);\n    return dialogue.map((item)=>{\n        let avatar;\n        let character = item.character;\n        // Replace generic names with avatar names\n        if (item.character.toLowerCase().includes(\"student\") || item.character.toLowerCase().includes(\"learner\")) {\n            character = avatars.student.name;\n            avatar = avatars.student;\n        } else if (item.character.toLowerCase().includes(\"tutor\") || item.character.toLowerCase().includes(\"teacher\") || item.character.toLowerCase().includes(\"instructor\")) {\n            character = avatars.tutor.name;\n            avatar = avatars.tutor;\n        }\n        return {\n            ...item,\n            character,\n            avatar\n        };\n    });\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2xpYi9hdmF0YXItdXRpbHMudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBLHVDQUF1QztBQU92QywwQ0FBMEM7QUFDbkMsTUFBTUEsb0JBQThCO0lBQ3pDO1FBQUVDLE1BQU07UUFBU0MsT0FBTztRQUFzQkMsTUFBTTtJQUFVO0lBQzlEO1FBQUVGLE1BQU07UUFBVUMsT0FBTztRQUF1QkMsTUFBTTtJQUFVO0lBQ2hFO1FBQUVGLE1BQU07UUFBVUMsT0FBTztRQUF1QkMsTUFBTTtJQUFVO0lBQ2hFO1FBQUVGLE1BQU07UUFBU0MsT0FBTztRQUFzQkMsTUFBTTtJQUFVO0lBQzlEO1FBQUVGLE1BQU07UUFBT0MsT0FBTztRQUFvQkMsTUFBTTtJQUFVO0lBQzFEO1FBQUVGLE1BQU07UUFBU0MsT0FBTztRQUFzQkMsTUFBTTtJQUFRO0lBQzVEO1FBQUVGLE1BQU07UUFBVUMsT0FBTztRQUF1QkMsTUFBTTtJQUFRO0lBQzlEO1FBQUVGLE1BQU07UUFBV0MsT0FBTztRQUF3QkMsTUFBTTtJQUFRO0lBQ2hFO1FBQUVGLE1BQU07UUFBUUMsT0FBTztRQUFxQkMsTUFBTTtJQUFRO0lBQzFEO1FBQUVGLE1BQU07UUFBUUMsT0FBTztRQUFxQkMsTUFBTTtJQUFRO0NBQzNEO0FBRUQsK0RBQStEO0FBQy9ELGlGQUFpRjtBQUMxRSxTQUFTQyxtQkFBbUJDLFFBQWlCO0lBQ2xELE1BQU1DLFdBQVdOLGtCQUFrQk8sTUFBTSxDQUFDQyxDQUFBQSxTQUFVQSxPQUFPTCxJQUFJLEtBQUs7SUFDcEUsTUFBTU0sU0FBU1Qsa0JBQWtCTyxNQUFNLENBQUNDLENBQUFBLFNBQVVBLE9BQU9MLElBQUksS0FBSztJQUVsRSxnREFBZ0Q7SUFDaEQsTUFBTU8sT0FBT0wsWUFBWTtJQUV6QixtREFBbUQ7SUFDbkQsTUFBTU0sV0FBVyxDQUFDQztRQUNoQixJQUFJQyxPQUFPO1FBQ1gsSUFBSyxJQUFJQyxJQUFJLEdBQUdBLElBQUlGLElBQUlHLE1BQU0sRUFBRUQsSUFBSztZQUNuQyxNQUFNRSxPQUFPSixJQUFJSyxVQUFVLENBQUNIO1lBQzVCRCxPQUFPLENBQUVBLFFBQVEsS0FBS0EsT0FBUUc7WUFDOUJILE9BQU9BLE9BQU9BLEtBQUssNEJBQTRCOztRQUNqRDtRQUNBLE9BQU9LLEtBQUtDLEdBQUcsQ0FBQ047SUFDbEI7SUFFQSxNQUFNQSxPQUFPRixTQUFTRDtJQUV0Qix3Q0FBd0M7SUFDeEMsTUFBTVUsZUFBZVAsT0FBT1AsU0FBU1MsTUFBTTtJQUMzQyxNQUFNTSxhQUFhLENBQUNSLE9BQU8sS0FBS0osT0FBT00sTUFBTSxDQUFDLGlDQUFpQzs7SUFFL0UsT0FBTztRQUNMTyxTQUFTaEIsUUFBUSxDQUFDYyxhQUFhO1FBQy9CRyxPQUFPZCxNQUFNLENBQUNZLFdBQVc7SUFDM0I7QUFDRjtBQUVBLHFCQUFxQjtBQUNkLFNBQVNHLGdCQUFnQnZCLElBQVk7SUFDMUMsT0FBT0Qsa0JBQWtCeUIsSUFBSSxDQUFDakIsQ0FBQUEsU0FDNUJBLE9BQU9QLElBQUksQ0FBQ3lCLFdBQVcsT0FBT3pCLEtBQUt5QixXQUFXO0FBRWxEO0FBRUEsZ0VBQWdFO0FBQ3pELFNBQVNDLDJCQUNkQyxRQUFxRSxFQUNyRXZCLFFBQWlCO0lBRWpCLE1BQU13QixVQUFVekIsbUJBQW1CQztJQUVuQyxPQUFPdUIsU0FBU0UsR0FBRyxDQUFDQyxDQUFBQTtRQUNsQixJQUFJdkI7UUFDSixJQUFJd0IsWUFBWUQsS0FBS0MsU0FBUztRQUU5QiwwQ0FBMEM7UUFDMUMsSUFBSUQsS0FBS0MsU0FBUyxDQUFDTixXQUFXLEdBQUdPLFFBQVEsQ0FBQyxjQUFjRixLQUFLQyxTQUFTLENBQUNOLFdBQVcsR0FBR08sUUFBUSxDQUFDLFlBQVk7WUFDeEdELFlBQVlILFFBQVFQLE9BQU8sQ0FBQ3JCLElBQUk7WUFDaENPLFNBQVNxQixRQUFRUCxPQUFPO1FBQzFCLE9BQU8sSUFBSVMsS0FBS0MsU0FBUyxDQUFDTixXQUFXLEdBQUdPLFFBQVEsQ0FBQyxZQUFZRixLQUFLQyxTQUFTLENBQUNOLFdBQVcsR0FBR08sUUFBUSxDQUFDLGNBQWNGLEtBQUtDLFNBQVMsQ0FBQ04sV0FBVyxHQUFHTyxRQUFRLENBQUMsZUFBZTtZQUNwS0QsWUFBWUgsUUFBUU4sS0FBSyxDQUFDdEIsSUFBSTtZQUM5Qk8sU0FBU3FCLFFBQVFOLEtBQUs7UUFDeEI7UUFFQSxPQUFPO1lBQ0wsR0FBR1EsSUFBSTtZQUNQQztZQUNBeEI7UUFDRjtJQUNGO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbGliL2F2YXRhci11dGlscy50cz85ZWVkIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEF2YXRhciB1dGlsaXR5IGZvciBkaWFsb2d1ZSBzZWN0aW9uc1xyXG5leHBvcnQgaW50ZXJmYWNlIEF2YXRhciB7XHJcbiAgbmFtZTogc3RyaW5nXHJcbiAgaW1hZ2U6IHN0cmluZ1xyXG4gIHJvbGU6ICdzdHVkZW50JyB8ICd0dXRvcidcclxufVxyXG5cclxuLy8gQXZhaWxhYmxlIGF2YXRhcnMgZm9yIGRpYWxvZ3VlIHNlY3Rpb25zXHJcbmV4cG9ydCBjb25zdCBBVkFJTEFCTEVfQVZBVEFSUzogQXZhdGFyW10gPSBbXHJcbiAgeyBuYW1lOiAnQmV0aHknLCBpbWFnZTogJy9hdmF0YXJzL0JldGh5LnBuZycsIHJvbGU6ICdzdHVkZW50JyB9LFxyXG4gIHsgbmFtZTogJ0ZhdXN0YScsIGltYWdlOiAnL2F2YXRhcnMvRmF1c3RhLnBuZycsIHJvbGU6ICdzdHVkZW50JyB9LFxyXG4gIHsgbmFtZTogJ05haWxhaCcsIGltYWdlOiAnL2F2YXRhcnMvTmFpbGFoLnBuZycsIHJvbGU6ICdzdHVkZW50JyB9LFxyXG4gIHsgbmFtZTogJ1BlZ2d5JywgaW1hZ2U6ICcvYXZhdGFycy9QZWdneS5wbmcnLCByb2xlOiAnc3R1ZGVudCcgfSxcclxuICB7IG5hbWU6ICdTYW0nLCBpbWFnZTogJy9hdmF0YXJzL1NhbS5wbmcnLCByb2xlOiAnc3R1ZGVudCcgfSxcclxuICB7IG5hbWU6ICdBc2hlcicsIGltYWdlOiAnL2F2YXRhcnMvQXNoZXIucG5nJywgcm9sZTogJ3R1dG9yJyB9LFxyXG4gIHsgbmFtZTogJ0VkbW9uZCcsIGltYWdlOiAnL2F2YXRhcnMvRWRtb25kLnBuZycsIHJvbGU6ICd0dXRvcicgfSxcclxuICB7IG5hbWU6ICdFdGllbm5lJywgaW1hZ2U6ICcvYXZhdGFycy9FdGllbm5lLnBuZycsIHJvbGU6ICd0dXRvcicgfSxcclxuICB7IG5hbWU6ICdKb2huJywgaW1hZ2U6ICcvYXZhdGFycy9Kb2huLnBuZycsIHJvbGU6ICd0dXRvcicgfSxcclxuICB7IG5hbWU6ICdKb3NlJywgaW1hZ2U6ICcvYXZhdGFycy9Kb3NlLnBuZycsIHJvbGU6ICd0dXRvcicgfSxcclxuXVxyXG5cclxuLy8gR2V0IHBlcnNpc3RlbnQgYXZhdGFycyBmb3IgZGlhbG9ndWUgKG9uZSBzdHVkZW50LCBvbmUgdHV0b3IpXHJcbi8vIFVzZXMgbGVzc29uIElEIG9yIGNvbnRlbnQgaGFzaCB0byBlbnN1cmUgc2FtZSBhdmF0YXJzIHBlcnNpc3QgYWNyb3NzIHJlZnJlc2hlc1xyXG5leHBvcnQgZnVuY3Rpb24gZ2V0RGlhbG9ndWVBdmF0YXJzKGxlc3NvbklkPzogc3RyaW5nKTogeyBzdHVkZW50OiBBdmF0YXI7IHR1dG9yOiBBdmF0YXIgfSB7XHJcbiAgY29uc3Qgc3R1ZGVudHMgPSBBVkFJTEFCTEVfQVZBVEFSUy5maWx0ZXIoYXZhdGFyID0+IGF2YXRhci5yb2xlID09PSAnc3R1ZGVudCcpXHJcbiAgY29uc3QgdHV0b3JzID0gQVZBSUxBQkxFX0FWQVRBUlMuZmlsdGVyKGF2YXRhciA9PiBhdmF0YXIucm9sZSA9PT0gJ3R1dG9yJylcclxuICBcclxuICAvLyBDcmVhdGUgYSBzZWVkIGZyb20gbGVzc29uIElEIG9yIHVzZSBhIGRlZmF1bHRcclxuICBjb25zdCBzZWVkID0gbGVzc29uSWQgfHwgJ2RlZmF1bHQtbGVzc29uJ1xyXG4gIFxyXG4gIC8vIFNpbXBsZSBoYXNoIGZ1bmN0aW9uIHRvIGNvbnZlcnQgc3RyaW5nIHRvIG51bWJlclxyXG4gIGNvbnN0IGhhc2hDb2RlID0gKHN0cjogc3RyaW5nKTogbnVtYmVyID0+IHtcclxuICAgIGxldCBoYXNoID0gMFxyXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBzdHIubGVuZ3RoOyBpKyspIHtcclxuICAgICAgY29uc3QgY2hhciA9IHN0ci5jaGFyQ29kZUF0KGkpXHJcbiAgICAgIGhhc2ggPSAoKGhhc2ggPDwgNSkgLSBoYXNoKSArIGNoYXJcclxuICAgICAgaGFzaCA9IGhhc2ggJiBoYXNoIC8vIENvbnZlcnQgdG8gMzItYml0IGludGVnZXJcclxuICAgIH1cclxuICAgIHJldHVybiBNYXRoLmFicyhoYXNoKVxyXG4gIH1cclxuICBcclxuICBjb25zdCBoYXNoID0gaGFzaENvZGUoc2VlZClcclxuICBcclxuICAvLyBVc2UgaGFzaCB0byBzZWxlY3QgY29uc2lzdGVudCBhdmF0YXJzXHJcbiAgY29uc3Qgc3R1ZGVudEluZGV4ID0gaGFzaCAlIHN0dWRlbnRzLmxlbmd0aFxyXG4gIGNvbnN0IHR1dG9ySW5kZXggPSAoaGFzaCArIDEpICUgdHV0b3JzLmxlbmd0aCAvLyBPZmZzZXQgdG8gYXZvaWQgc2FtZSBzZWxlY3Rpb25cclxuICBcclxuICByZXR1cm4ge1xyXG4gICAgc3R1ZGVudDogc3R1ZGVudHNbc3R1ZGVudEluZGV4XSxcclxuICAgIHR1dG9yOiB0dXRvcnNbdHV0b3JJbmRleF1cclxuICB9XHJcbn1cclxuXHJcbi8vIEdldCBhdmF0YXIgYnkgbmFtZVxyXG5leHBvcnQgZnVuY3Rpb24gZ2V0QXZhdGFyQnlOYW1lKG5hbWU6IHN0cmluZyk6IEF2YXRhciB8IHVuZGVmaW5lZCB7XHJcbiAgcmV0dXJuIEFWQUlMQUJMRV9BVkFUQVJTLmZpbmQoYXZhdGFyID0+IFxyXG4gICAgYXZhdGFyLm5hbWUudG9Mb3dlckNhc2UoKSA9PT0gbmFtZS50b0xvd2VyQ2FzZSgpXHJcbiAgKVxyXG59XHJcblxyXG4vLyBSZXBsYWNlIGdlbmVyaWMgY2hhcmFjdGVyIG5hbWVzIHdpdGggYXZhdGFyIG5hbWVzIGluIGRpYWxvZ3VlXHJcbmV4cG9ydCBmdW5jdGlvbiBlbmhhbmNlRGlhbG9ndWVXaXRoQXZhdGFycyhcclxuICBkaWFsb2d1ZTogQXJyYXk8eyBjaGFyYWN0ZXI6IHN0cmluZzsgbGluZTogc3RyaW5nOyBpc0dhcD86IGJvb2xlYW4gfT4sIFxyXG4gIGxlc3NvbklkPzogc3RyaW5nXHJcbik6IEFycmF5PHsgY2hhcmFjdGVyOiBzdHJpbmc7IGxpbmU6IHN0cmluZzsgaXNHYXA/OiBib29sZWFuOyBhdmF0YXI/OiBBdmF0YXIgfT4ge1xyXG4gIGNvbnN0IGF2YXRhcnMgPSBnZXREaWFsb2d1ZUF2YXRhcnMobGVzc29uSWQpXHJcbiAgXHJcbiAgcmV0dXJuIGRpYWxvZ3VlLm1hcChpdGVtID0+IHtcclxuICAgIGxldCBhdmF0YXI6IEF2YXRhciB8IHVuZGVmaW5lZFxyXG4gICAgbGV0IGNoYXJhY3RlciA9IGl0ZW0uY2hhcmFjdGVyXHJcbiAgICBcclxuICAgIC8vIFJlcGxhY2UgZ2VuZXJpYyBuYW1lcyB3aXRoIGF2YXRhciBuYW1lc1xyXG4gICAgaWYgKGl0ZW0uY2hhcmFjdGVyLnRvTG93ZXJDYXNlKCkuaW5jbHVkZXMoJ3N0dWRlbnQnKSB8fCBpdGVtLmNoYXJhY3Rlci50b0xvd2VyQ2FzZSgpLmluY2x1ZGVzKCdsZWFybmVyJykpIHtcclxuICAgICAgY2hhcmFjdGVyID0gYXZhdGFycy5zdHVkZW50Lm5hbWVcclxuICAgICAgYXZhdGFyID0gYXZhdGFycy5zdHVkZW50XHJcbiAgICB9IGVsc2UgaWYgKGl0ZW0uY2hhcmFjdGVyLnRvTG93ZXJDYXNlKCkuaW5jbHVkZXMoJ3R1dG9yJykgfHwgaXRlbS5jaGFyYWN0ZXIudG9Mb3dlckNhc2UoKS5pbmNsdWRlcygndGVhY2hlcicpIHx8IGl0ZW0uY2hhcmFjdGVyLnRvTG93ZXJDYXNlKCkuaW5jbHVkZXMoJ2luc3RydWN0b3InKSkge1xyXG4gICAgICBjaGFyYWN0ZXIgPSBhdmF0YXJzLnR1dG9yLm5hbWVcclxuICAgICAgYXZhdGFyID0gYXZhdGFycy50dXRvclxyXG4gICAgfVxyXG4gICAgXHJcbiAgICByZXR1cm4ge1xyXG4gICAgICAuLi5pdGVtLFxyXG4gICAgICBjaGFyYWN0ZXIsXHJcbiAgICAgIGF2YXRhclxyXG4gICAgfVxyXG4gIH0pXHJcbn0iXSwibmFtZXMiOlsiQVZBSUxBQkxFX0FWQVRBUlMiLCJuYW1lIiwiaW1hZ2UiLCJyb2xlIiwiZ2V0RGlhbG9ndWVBdmF0YXJzIiwibGVzc29uSWQiLCJzdHVkZW50cyIsImZpbHRlciIsImF2YXRhciIsInR1dG9ycyIsInNlZWQiLCJoYXNoQ29kZSIsInN0ciIsImhhc2giLCJpIiwibGVuZ3RoIiwiY2hhciIsImNoYXJDb2RlQXQiLCJNYXRoIiwiYWJzIiwic3R1ZGVudEluZGV4IiwidHV0b3JJbmRleCIsInN0dWRlbnQiLCJ0dXRvciIsImdldEF2YXRhckJ5TmFtZSIsImZpbmQiLCJ0b0xvd2VyQ2FzZSIsImVuaGFuY2VEaWFsb2d1ZVdpdGhBdmF0YXJzIiwiZGlhbG9ndWUiLCJhdmF0YXJzIiwibWFwIiwiaXRlbSIsImNoYXJhY3RlciIsImluY2x1ZGVzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/avatar-utils.ts\n"));

/***/ })

});