"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/popup/page",{

/***/ "(app-pages-browser)/./lib/export-html-pptx.ts":
/*!*********************************!*\
  !*** ./lib/export-html-pptx.ts ***!
  \*********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   exportToHTML: function() { return /* binding */ exportToHTML; }\n/* harmony export */ });\n/* harmony import */ var _avatar_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./avatar-utils */ \"(app-pages-browser)/./lib/avatar-utils.ts\");\n\n/**\r\n * Strips markdown formatting from text\r\n */ function stripMarkdown(text) {\n    if (!text || typeof text !== \"string\") return text;\n    return text.replace(/\\*\\*(.+?)\\*\\*/g, \"$1\").replace(/__(.+?)__/g, \"$1\").replace(/\\*(.+?)\\*/g, \"$1\").replace(/_(.+?)_/g, \"$1\");\n}\n/**\r\n * Generates inline CSS for HTML export\r\n */ function generateInlineCSS() {\n    return \"\\n    * {\\n      margin: 0;\\n      padding: 0;\\n      box-sizing: border-box;\\n    }\\n    \\n    body {\\n      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;\\n      line-height: 1.6;\\n      color: #1e293b;\\n      background: #ffffff;\\n      padding: 2rem;\\n      max-width: 1200px;\\n      margin: 0 auto;\\n    }\\n    \\n    .lesson-header {\\n      margin-bottom: 2rem;\\n      padding-bottom: 1.5rem;\\n      border-bottom: 2px solid #e2e8f0;\\n    }\\n    \\n    .lesson-title {\\n      font-size: 2rem;\\n      font-weight: 700;\\n      color: #0f172a;\\n      margin-bottom: 0.75rem;\\n    }\\n    \\n    .lesson-meta {\\n      font-size: 0.875rem;\\n      color: #64748b;\\n      margin-bottom: 0.5rem;\\n    }\\n    \\n    .export-actions {\\n      margin: 1.5rem 0;\\n      padding: 1rem;\\n      background: #f8fafc;\\n      border-radius: 0.5rem;\\n      display: flex;\\n      gap: 1rem;\\n      flex-wrap: wrap;\\n    }\\n    \\n    .btn {\\n      padding: 0.5rem 1rem;\\n      border: none;\\n      border-radius: 0.375rem;\\n      font-size: 0.875rem;\\n      font-weight: 500;\\n      cursor: pointer;\\n      transition: all 0.2s;\\n    }\\n    \\n    .btn-primary {\\n      background: #3b82f6;\\n      color: white;\\n    }\\n    \\n    .btn-primary:hover {\\n      background: #2563eb;\\n    }\\n    \\n    .section {\\n      margin-bottom: 2.5rem;\\n      page-break-inside: avoid;\\n    }\\n    \\n    .section-header {\\n      font-size: 1.75rem;\\n      font-weight: 600;\\n      color: #0f172a;\\n      margin-bottom: 1rem;\\n      padding-bottom: 0.5rem;\\n      border-bottom: 1px solid #e2e8f0;\\n    }\\n    \\n    .instruction {\\n      background: #f0fdf4;\\n      border-left: 3px solid #22c55e;\\n      padding: 0.75rem 1rem;\\n      margin-bottom: 1rem;\\n      font-style: italic;\\n      color: #166534;\\n      border-radius: 0.25rem;\\n    }\\n    \\n    .instruction-blue {\\n      background: #eff6ff;\\n      border-left-color: #3b82f6;\\n      color: #1e40af;\\n    }\\n    \\n    .content-item {\\n      margin-bottom: 1rem;\\n      padding-left: 1.5rem;\\n    }\\n    \\n    .vocab-card {\\n      background: #f8fafc;\\n      border: 1px solid #e2e8f0;\\n      border-radius: 0.5rem;\\n      padding: 1rem;\\n      margin-bottom: 1rem;\\n    }\\n    \\n    .vocab-word {\\n      font-size: 1.125rem;\\n      font-weight: 600;\\n      color: #3b82f6;\\n      margin-bottom: 0.5rem;\\n    }\\n    \\n    .vocab-meaning {\\n      color: #475569;\\n      margin-bottom: 0.5rem;\\n    }\\n    \\n    .vocab-examples {\\n      margin-top: 0.75rem;\\n      padding-left: 1rem;\\n    }\\n    \\n    .vocab-example {\\n      color: #64748b;\\n      margin-bottom: 0.25rem;\\n    }\\n    \\n    .reading-passage {\\n      background: #f8fafc;\\n      border: 1px solid #e2e8f0;\\n      border-radius: 0.5rem;\\n      padding: 1.5rem;\\n      line-height: 1.8;\\n    }\\n    \\n    .reading-passage p {\\n      margin-bottom: 1rem;\\n    }\\n    \\n    .dialogue-container {\\n      background: #f8fafc;\\n      border: 1px solid #e2e8f0;\\n      border-radius: 0.5rem;\\n      padding: 1.5rem;\\n    }\\n    \\n    .dialogue-line {\\n      margin-bottom: 0.75rem;\\n      display: flex;\\n      gap: 1rem;\\n      align-items: flex-start;\\n    }\\n    \\n    .dialogue-avatar {\\n      flex-shrink: 0;\\n      display: flex;\\n      flex-direction: column;\\n      align-items: center;\\n      gap: 0.25rem;\\n      width: 60px;\\n    }\\n    \\n    .dialogue-avatar img {\\n      width: 48px;\\n      height: 48px;\\n      border-radius: 0.375rem;\\n      border: 2px solid #e2e8f0;\\n      object-fit: cover;\\n    }\\n    \\n    .dialogue-avatar-name {\\n      font-size: 0.75rem;\\n      color: #64748b;\\n      font-weight: 500;\\n      text-align: center;\\n    }\\n    \\n    .dialogue-character {\\n      font-weight: 600;\\n      color: #3b82f6;\\n      min-width: 100px;\\n    }\\n    \\n    .dialogue-text {\\n      flex: 1;\\n    }\\n    \\n    .grammar-box {\\n      background: #eff6ff;\\n      border: 1px solid #bfdbfe;\\n      border-radius: 0.5rem;\\n      padding: 1rem;\\n      margin-bottom: 1rem;\\n    }\\n    \\n    .grammar-label {\\n      font-weight: 600;\\n      color: #1e40af;\\n      margin-bottom: 0.5rem;\\n    }\\n    \\n    .example-box {\\n      background: #f8fafc;\\n      border-left: 3px solid #3b82f6;\\n      padding: 0.75rem 1rem;\\n      margin-bottom: 0.5rem;\\n      border-radius: 0.25rem;\\n    }\\n    \\n    @media print {\\n      body {\\n        padding: 1rem;\\n      }\\n      \\n      .export-actions {\\n        display: none;\\n      }\\n      \\n      .section {\\n        page-break-inside: avoid;\\n      }\\n      \\n      .section-header {\\n        page-break-after: avoid;\\n      }\\n    }\\n  \";\n}\n/**\r\n * Exports lesson as standalone HTML file\r\n */ async function exportToHTML(lessonData, enabledSections) {\n    var _lessonData_metadata_bannerImages_, _lessonData_metadata_bannerImages, _lessonData_metadata, _lessonData_sections_warmup, _lessonData_sections_vocabulary, _lessonData_sections_comprehension, _lessonData_sections_discussion, _lessonData_sections_wrapup;\n    const formatDate = ()=>{\n        return new Date().toLocaleDateString(\"en-US\", {\n            year: \"numeric\",\n            month: \"long\",\n            day: \"numeric\"\n        });\n    };\n    let html = '<!DOCTYPE html>\\n<html lang=\"en\">\\n<head>\\n  <meta charset=\"UTF-8\">\\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\\n  <title>'.concat(stripMarkdown(lessonData.lessonTitle), \"</title>\\n  <style>\").concat(generateInlineCSS(), '</style>\\n</head>\\n<body>\\n  <div class=\"lesson-header\">\\n    <h1 class=\"lesson-title\">').concat(stripMarkdown(lessonData.lessonTitle), '</h1>\\n    <div class=\"lesson-meta\">Target Language: ').concat(lessonData.targetLanguage.charAt(0).toUpperCase() + lessonData.targetLanguage.slice(1), '</div>\\n    <div class=\"lesson-meta\">Level: ').concat(lessonData.studentLevel, \" | Type: \").concat(lessonData.lessonType, '</div>\\n    <div class=\"lesson-meta\">Generated on: ').concat(formatDate(), \"</div>\\n  </div>\");\n    // Add banner image if available\n    const bannerImage = lessonData.bannerImage || ((_lessonData_metadata = lessonData.metadata) === null || _lessonData_metadata === void 0 ? void 0 : (_lessonData_metadata_bannerImages = _lessonData_metadata.bannerImages) === null || _lessonData_metadata_bannerImages === void 0 ? void 0 : (_lessonData_metadata_bannerImages_ = _lessonData_metadata_bannerImages[0]) === null || _lessonData_metadata_bannerImages_ === void 0 ? void 0 : _lessonData_metadata_bannerImages_.src);\n    if (bannerImage) {\n        html += '\\n  <div style=\"margin: 1.5rem 0;\">\\n    <img src=\"'.concat(bannerImage, '\" alt=\"').concat(stripMarkdown(lessonData.lessonTitle), '\" style=\"width: 100%; max-height: 400px; object-fit: cover; border-radius: 0.5rem; box-shadow: 0 4px 6px rgba(0,0,0,0.1);\" onerror=\"this.style.display=\\'none\\'\" />\\n  </div>');\n    }\n    html += '\\n  \\n  <div class=\"export-actions\">\\n    <button class=\"btn btn-primary\" onclick=\"window.print()\">\\uD83D\\uDDA8Ô∏è Print to PDF</button>\\n    <button class=\"btn btn-primary\" onclick=\"alert(\\'Select File > Save As to save this HTML file\\')\">\\uD83D\\uDCBE Save HTML</button>\\n  </div>\\n';\n    // Warmup\n    if (enabledSections.warmup && ((_lessonData_sections_warmup = lessonData.sections.warmup) === null || _lessonData_sections_warmup === void 0 ? void 0 : _lessonData_sections_warmup.length) > 0) {\n        html += '\\n  <div class=\"section\">\\n    <h2 class=\"section-header\">Warm-up Questions</h2>';\n        lessonData.sections.warmup.forEach((question, index)=>{\n            if (index === 0) {\n                html += '<div class=\"instruction\">'.concat(stripMarkdown(question), \"</div>\");\n            } else {\n                html += '<div class=\"content-item\">'.concat(index, \". \").concat(stripMarkdown(question), \"</div>\");\n            }\n        });\n        html += \"</div>\";\n    }\n    // Vocabulary\n    if (enabledSections.vocabulary && ((_lessonData_sections_vocabulary = lessonData.sections.vocabulary) === null || _lessonData_sections_vocabulary === void 0 ? void 0 : _lessonData_sections_vocabulary.length) > 0) {\n        html += '\\n  <div class=\"section\">\\n    <h2 class=\"section-header\">Key Vocabulary</h2>';\n        let vocabIndex = 0;\n        lessonData.sections.vocabulary.forEach((item, index)=>{\n            if (index === 0 && item.word === \"INSTRUCTION\") {\n                html += '<div class=\"instruction instruction-blue\">'.concat(stripMarkdown(item.meaning), \"</div>\");\n                return;\n            }\n            vocabIndex++;\n            const examples = item.examples || (item.example ? [\n                item.example\n            ] : []);\n            html += '\\n    <div class=\"vocab-card\">\\n      <div class=\"vocab-word\">'.concat(vocabIndex, \". \").concat(stripMarkdown(item.word), '</div>\\n      <div class=\"vocab-meaning\">').concat(stripMarkdown(item.meaning), \"</div>\");\n            if (examples.length > 0) {\n                html += '<div class=\"vocab-examples\">';\n                examples.forEach((ex, i)=>{\n                    html += '<div class=\"vocab-example\">‚Ä¢ '.concat(stripMarkdown(ex), \"</div>\");\n                });\n                html += \"</div>\";\n            }\n            html += \"</div>\";\n        });\n        html += \"</div>\";\n    }\n    // Reading\n    if (enabledSections.reading && lessonData.sections.reading) {\n        html += '\\n  <div class=\"section\">\\n    <h2 class=\"section-header\">Reading Passage</h2>';\n        const parts = lessonData.sections.reading.split(\"\\n\\n\");\n        if (parts.length > 1 && parts[0].includes(\"Read the following text carefully\")) {\n            html += '<div class=\"instruction\">'.concat(stripMarkdown(parts[0]), \"</div>\");\n            html += '<div class=\"reading-passage\">';\n            parts.slice(1).forEach((para)=>{\n                html += \"<p>\".concat(stripMarkdown(para), \"</p>\");\n            });\n            html += \"</div>\";\n        } else {\n            html += '<div class=\"reading-passage\">';\n            parts.forEach((para)=>{\n                html += \"<p>\".concat(stripMarkdown(para), \"</p>\");\n            });\n            html += \"</div>\";\n        }\n        html += \"</div>\";\n    }\n    // Comprehension\n    if (enabledSections.comprehension && ((_lessonData_sections_comprehension = lessonData.sections.comprehension) === null || _lessonData_sections_comprehension === void 0 ? void 0 : _lessonData_sections_comprehension.length) > 0) {\n        html += '\\n  <div class=\"section\">\\n    <h2 class=\"section-header\">Reading Comprehension</h2>';\n        lessonData.sections.comprehension.forEach((question, index)=>{\n            if (index === 0) {\n                html += '<div class=\"instruction instruction-blue\">'.concat(stripMarkdown(question), \"</div>\");\n            } else {\n                html += '<div class=\"content-item\">'.concat(index, \". \").concat(stripMarkdown(question), \"</div>\");\n            }\n        });\n        html += \"</div>\";\n    }\n    // Discussion\n    if (enabledSections.discussion && ((_lessonData_sections_discussion = lessonData.sections.discussion) === null || _lessonData_sections_discussion === void 0 ? void 0 : _lessonData_sections_discussion.length) > 0) {\n        html += '\\n  <div class=\"section\">\\n    <h2 class=\"section-header\">Discussion Questions</h2>';\n        lessonData.sections.discussion.forEach((question, index)=>{\n            if (index === 0) {\n                html += '<div class=\"instruction\">'.concat(stripMarkdown(question), \"</div>\");\n            } else {\n                html += '<div class=\"content-item\">'.concat(index, \". \").concat(stripMarkdown(question), \"</div>\");\n            }\n        });\n        html += \"</div>\";\n    }\n    // Dialogue Practice\n    if (enabledSections.dialoguePractice && lessonData.sections.dialoguePractice) {\n        var _lessonData_sections_dialoguePractice_followUpQuestions;\n        html += '\\n  <div class=\"section\">\\n    <h2 class=\"section-header\">Dialogue Practice</h2>\\n    <div class=\"instruction\">'.concat(stripMarkdown(lessonData.sections.dialoguePractice.instruction), '</div>\\n    <div class=\"dialogue-container\">');\n        const enhancedDialogue = (0,_avatar_utils__WEBPACK_IMPORTED_MODULE_0__.enhanceDialogueWithAvatars)(lessonData.sections.dialoguePractice.dialogue, lessonData.id, \"dialoguePractice\");\n        enhancedDialogue.forEach((line)=>{\n            html += '\\n      <div class=\"dialogue-line\">';\n            // Add avatar if available - use initials as fallback\n            if (line.avatar) {\n                const initial = line.avatar.name.charAt(0).toUpperCase();\n                html += '\\n        <div class=\"dialogue-avatar\">\\n          <div style=\"width: 48px; height: 48px; border-radius: 0.375rem; border: 2px solid #e2e8f0; background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); display: flex; align-items: center; justify-content: center; color: white; font-weight: 600; font-size: 20px;\">\\n            '.concat(initial, '\\n          </div>\\n          <div class=\"dialogue-avatar-name\">').concat(line.avatar.name, \"</div>\\n        </div>\");\n            }\n            html += '\\n        <div style=\"flex: 1;\">\\n          <div class=\"dialogue-character\">'.concat(line.character, ':</div>\\n          <div class=\"dialogue-text\">').concat(stripMarkdown(line.line), \"</div>\\n        </div>\\n      </div>\");\n        });\n        html += \"</div>\";\n        if (((_lessonData_sections_dialoguePractice_followUpQuestions = lessonData.sections.dialoguePractice.followUpQuestions) === null || _lessonData_sections_dialoguePractice_followUpQuestions === void 0 ? void 0 : _lessonData_sections_dialoguePractice_followUpQuestions.length) > 0) {\n            html += '<div style=\"margin-top: 1rem;\"><strong>Follow-up Questions:</strong></div>';\n            lessonData.sections.dialoguePractice.followUpQuestions.forEach((q, i)=>{\n                html += '<div class=\"content-item\">'.concat(i + 1, \". \").concat(stripMarkdown(q), \"</div>\");\n            });\n        }\n        html += \"</div>\";\n    }\n    // Dialogue Fill-in-the-Gap\n    if (enabledSections.dialogueFillGap && lessonData.sections.dialogueFillGap) {\n        var _lessonData_sections_dialogueFillGap_answers;\n        html += '\\n  <div class=\"section\">\\n    <h2 class=\"section-header\">Dialogue Fill-in-the-Gap</h2>\\n    <div class=\"instruction instruction-blue\">'.concat(stripMarkdown(lessonData.sections.dialogueFillGap.instruction), '</div>\\n    <div class=\"dialogue-container\">');\n        const enhancedDialogueFillGap = (0,_avatar_utils__WEBPACK_IMPORTED_MODULE_0__.enhanceDialogueWithAvatars)(lessonData.sections.dialogueFillGap.dialogue, lessonData.id, \"dialogueFillGap\");\n        enhancedDialogueFillGap.forEach((line)=>{\n            const lineText = line.isGap ? line.line.replace(/_____/g, '<span style=\"display: inline-block; width: 80px; border-bottom: 2px solid #3b82f6; margin: 0 4px;\"></span>') : stripMarkdown(line.line);\n            html += '\\n      <div class=\"dialogue-line\">';\n            // Add avatar if available - use initials as fallback\n            if (line.avatar) {\n                const initial = line.avatar.name.charAt(0).toUpperCase();\n                html += '\\n        <div class=\"dialogue-avatar\">\\n          <div style=\"width: 48px; height: 48px; border-radius: 0.375rem; border: 2px solid #e2e8f0; background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); display: flex; align-items: center; justify-content: center; color: white; font-weight: 600; font-size: 20px;\">\\n            '.concat(initial, '\\n          </div>\\n          <div class=\"dialogue-avatar-name\">').concat(line.avatar.name, \"</div>\\n        </div>\");\n            }\n            html += '\\n        <div style=\"flex: 1;\">\\n          <div class=\"dialogue-character\">'.concat(line.character, ':</div>\\n          <div class=\"dialogue-text\">').concat(lineText, \"</div>\\n        </div>\\n      </div>\");\n        });\n        html += \"</div>\";\n        if (((_lessonData_sections_dialogueFillGap_answers = lessonData.sections.dialogueFillGap.answers) === null || _lessonData_sections_dialogueFillGap_answers === void 0 ? void 0 : _lessonData_sections_dialogueFillGap_answers.length) > 0) {\n            html += '<div style=\"margin-top: 1rem;\"><strong>Answer Key:</strong></div>';\n            html += '<div style=\"margin-left: 1.5rem; color: #64748b;\">'.concat(lessonData.sections.dialogueFillGap.answers.join(\", \"), \"</div>\");\n        }\n        html += \"</div>\";\n    }\n    // Grammar\n    if (enabledSections.grammar && lessonData.sections.grammar) {\n        var _lessonData_sections_grammar_examples;\n        html += '\\n  <div class=\"section\">\\n    <h2 class=\"section-header\">Grammar Focus</h2>\\n    <h3 style=\"font-size: 1.25rem; margin-bottom: 1rem;\">'.concat(stripMarkdown(lessonData.sections.grammar.focus), \"</h3>\");\n        if (lessonData.sections.grammar.explanation) {\n            const exp = lessonData.sections.grammar.explanation;\n            if (exp.form) {\n                html += '\\n    <div class=\"grammar-box\">\\n      <div class=\"grammar-label\">Form:</div>\\n      <div>'.concat(stripMarkdown(exp.form), \"</div>\\n    </div>\");\n            }\n            if (exp.usage) {\n                html += '\\n    <div class=\"grammar-box\">\\n      <div class=\"grammar-label\">Usage:</div>\\n      <div>'.concat(stripMarkdown(exp.usage), \"</div>\\n    </div>\");\n            }\n            if (exp.levelNotes) {\n                html += '\\n    <div class=\"grammar-box\">\\n      <div class=\"grammar-label\">Note:</div>\\n      <div style=\"font-style: italic;\">'.concat(stripMarkdown(exp.levelNotes), \"</div>\\n    </div>\");\n            }\n        }\n        if (((_lessonData_sections_grammar_examples = lessonData.sections.grammar.examples) === null || _lessonData_sections_grammar_examples === void 0 ? void 0 : _lessonData_sections_grammar_examples.length) > 0) {\n            html += '<div style=\"margin-top: 1rem;\"><strong>Examples:</strong></div>';\n            lessonData.sections.grammar.examples.forEach((ex)=>{\n                html += '<div class=\"example-box\">'.concat(stripMarkdown(ex), \"</div>\");\n            });\n        }\n        html += \"</div>\";\n    }\n    // Pronunciation\n    if (enabledSections.pronunciation && lessonData.sections.pronunciation) {\n        var _lessonData_sections_pronunciation_words;\n        html += '\\n  <div class=\"section\">\\n    <h2 class=\"section-header\">Pronunciation Practice</h2>';\n        if (lessonData.sections.pronunciation.instruction) {\n            html += '<div class=\"instruction instruction-blue\">'.concat(stripMarkdown(lessonData.sections.pronunciation.instruction), \"</div>\");\n        }\n        if (((_lessonData_sections_pronunciation_words = lessonData.sections.pronunciation.words) === null || _lessonData_sections_pronunciation_words === void 0 ? void 0 : _lessonData_sections_pronunciation_words.length) > 0) {\n            lessonData.sections.pronunciation.words.forEach((word)=>{\n                var _word_tips;\n                html += '\\n    <div class=\"vocab-card\">\\n      <div class=\"vocab-word\">'.concat(word.word, ' <span style=\"font-family: monospace; color: #64748b;\">').concat(word.ipa, \"</span></div>\");\n                if (((_word_tips = word.tips) === null || _word_tips === void 0 ? void 0 : _word_tips.length) > 0) {\n                    html += '<div style=\"margin-top: 0.5rem;\"><strong style=\"font-size: 0.875rem;\">Tips:</strong></div>';\n                    word.tips.forEach((tip)=>{\n                        html += '<div style=\"margin-left: 1rem; color: #475569;\">‚Ä¢ '.concat(stripMarkdown(tip), \"</div>\");\n                    });\n                }\n                if (word.practiceSentence) {\n                    html += '<div style=\"margin-top: 0.5rem; font-style: italic; color: #64748b;\">\"'.concat(stripMarkdown(word.practiceSentence), '\"</div>');\n                }\n                html += \"</div>\";\n            });\n        }\n        html += \"</div>\";\n    }\n    // Wrap-up\n    if (enabledSections.wrapup && ((_lessonData_sections_wrapup = lessonData.sections.wrapup) === null || _lessonData_sections_wrapup === void 0 ? void 0 : _lessonData_sections_wrapup.length) > 0) {\n        html += '\\n  <div class=\"section\">\\n    <h2 class=\"section-header\">Wrap-up</h2>';\n        lessonData.sections.wrapup.forEach((item, index)=>{\n            if (index === 0) {\n                html += '<div class=\"instruction\">'.concat(stripMarkdown(item), \"</div>\");\n            } else {\n                html += '<div class=\"content-item\">'.concat(index, \". \").concat(stripMarkdown(item), \"</div>\");\n            }\n        });\n        html += \"</div>\";\n    }\n    html += \"\\n</body>\\n</html>\";\n    // Download HTML file\n    const blob = new Blob([\n        html\n    ], {\n        type: \"text/html\"\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement(\"a\");\n    a.href = url;\n    a.download = \"\".concat(lessonData.lessonTitle.replace(/[^a-z0-9]/gi, \"_\"), \"_lesson.html\");\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n} /**\r\n * Note: PowerPoint export has been removed due to build compatibility issues.\r\n * Users can convert HTML exports to PowerPoint using online tools or Microsoft Word.\r\n * \r\n * Recommended workflow:\r\n * 1. Export as HTML\r\n * 2. Open HTML in browser\r\n * 3. Print to PDF or use online HTML-to-PPTX converters\r\n */ \n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/export-html-pptx.ts\n"));

/***/ })

});